{"ast":null,"code":"import _objectSpread from\"/home/tmdev/Desktop/Final_Exam_Arman/react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"/home/tmdev/Desktop/Final_Exam_Arman/react/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/tmdev/Desktop/Final_Exam_Arman/react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/tmdev/Desktop/Final_Exam_Arman/react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from\"react\";import Highcharts from\"highcharts\";import HighchartsReact from\"highcharts-react-official\";import\"primereact/resources/themes/lara-light-indigo/theme.css\";import\"primereact/resources/primereact.min.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Dashboard=function Dashboard(){// State variables\nvar _useState=useState(\"column\"),_useState2=_slicedToArray(_useState,2),chart=_useState2[0],setChart=_useState2[1];// Current chart type\nvar _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),chartOptions=_useState4[0],setChartOptions=_useState4[1];// Chart options\nvar _useState5=useState(new Date().getFullYear()),_useState6=_slicedToArray(_useState5,2),selectedYear=_useState6[0],setSelectedYear=_useState6[1];// Selected year\nvar _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),usersData=_useState8[0],setUsersData=_useState8[1];// Data for users\nuseEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,data,filteredData,months,categories,seriesData,options;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"http://localhost:2525/users\");case 3:response=_context.sent;_context.next=6;return response.json();case 6:data=_context.sent;setUsersData(data);// Filter data based on the selected year\nfilteredData=data.filter(function(item){var createdAtYear=new Date(item.created_at).getFullYear();return createdAtYear===selectedYear;});months=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];// Generate categories and series data for the chart\ncategories=months.map(function(month){return\"\".concat(month);});seriesData=months.map(function(month){var monthData=filteredData.filter(function(item){return new Date(item.created_at).getMonth()===months.indexOf(month);});return monthData.length;});// Configure the chart options\noptions={chart:{type:chart},title:{text:\"Signed-up Users by Month\"},xAxis:{categories:categories},yAxis:{title:{text:\"User Count\"}},series:[{name:\"Users\",data:seriesData,color:\"#016025\"}]};setChartOptions(options);_context.next=19;break;case 16:_context.prev=16;_context.t0=_context[\"catch\"](0);console.error(\"Error fetching data:\",_context.t0);case 19:case\"end\":return _context.stop();}},_callee,null,[[0,16]]);}));return function fetchData(){return _ref.apply(this,arguments);};}();fetchData();},[selectedYear]);// Event handler for year selection change\nvar handleYearChange=function handleYearChange(event){var selectedValue=parseInt(event.target.value);setSelectedYear(selectedValue);};// Event handler for chart type selection change\nvar handleChartTypeChange=function handleChartTypeChange(event){var selectedChartType=event.target.value;setChartOptions(function(prevOptions){return _objectSpread(_objectSpread({},prevOptions),{},{chart:{type:selectedChartType}});});setChart(event.target.value);};// Generate chart options for the pie chart\nvar generatePieChartOptions=function generatePieChartOptions(){if(!usersData)return null;// Count the number of users in each status category\nvar activeUsers=usersData.filter(function(user){return user.status===\"active\";}).length;var inactiveUsers=usersData.filter(function(user){return user.status===\"inactive\";}).length;var disabledUsers=usersData.filter(function(user){return user.status===\"disabled\";}).length;// Configure the chart options\nvar options={chart:{type:\"pie\"},title:{text:\"User Status\"},series:[{name:\"Status\",data:[{name:\"Active\",y:activeUsers},{name:\"Inactive\",y:inactiveUsers},{name:\"Disabled\",y:disabledUsers}]}]};return options;};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Welcome to Dashboard\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"selection\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"year\",children:\"Select Year:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"year\",value:selectedYear,onChange:handleYearChange,children:[/*#__PURE__*/_jsx(\"option\",{value:2021,children:\"2021\"}),/*#__PURE__*/_jsx(\"option\",{value:2022,children:\"2022\"}),/*#__PURE__*/_jsx(\"option\",{value:2023,children:\"2023\"})]})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"selection\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"chartType\",children:\"Select Chart Type:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"chartType\",onChange:handleChartTypeChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"column\",children:\"Column Chart\"}),/*#__PURE__*/_jsx(\"option\",{value:\"line\",children:\"Line Chart\"})]})]}),/*#__PURE__*/_jsx(HighchartsReact,{highcharts:Highcharts,options:chartOptions}),/*#__PURE__*/_jsx(\"div\",{children:usersData?/*#__PURE__*/_jsx(HighchartsReact,{highcharts:Highcharts,options:generatePieChartOptions()}):/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"})})]});};export default Dashboard;","map":{"version":3,"names":["useEffect","useState","Highcharts","HighchartsReact","jsx","_jsx","jsxs","_jsxs","Dashboard","_useState","_useState2","_slicedToArray","chart","setChart","_useState3","_useState4","chartOptions","setChartOptions","_useState5","Date","getFullYear","_useState6","selectedYear","setSelectedYear","_useState7","_useState8","usersData","setUsersData","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","filteredData","months","categories","seriesData","options","wrap","_callee$","_context","prev","next","fetch","sent","json","filter","item","createdAtYear","created_at","map","month","concat","monthData","getMonth","indexOf","length","type","title","text","xAxis","yAxis","series","name","color","t0","console","error","stop","apply","arguments","handleYearChange","event","selectedValue","parseInt","target","value","handleChartTypeChange","selectedChartType","prevOptions","_objectSpread","generatePieChartOptions","activeUsers","user","status","inactiveUsers","disabledUsers","y","children","className","htmlFor","id","onChange","highcharts"],"sources":["/home/tmdev/Desktop/Final_Exam_Arman/react/src/ChartData/Dashboard.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";\nimport \"primereact/resources/primereact.min.css\";\n\nconst Dashboard = () => {\n  // State variables\n  const [chart, setChart] = useState(\"column\"); // Current chart type\n  const [chartOptions, setChartOptions] = useState({}); // Chart options\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear()); // Selected year\n  const [usersData, setUsersData] = useState(null); // Data for users\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:2525/users\");\n        const data = await response.json();\n        setUsersData(data);\n\n        // Filter data based on the selected year\n        const filteredData = data.filter((item) => {\n          const createdAtYear = new Date(item.created_at).getFullYear();\n          return createdAtYear === selectedYear;\n        });\n\n        const months = [\n          \"Jan\",\n          \"Feb\",\n          \"Mar\",\n          \"Apr\",\n          \"May\",\n          \"Jun\",\n          \"Jul\",\n          \"Aug\",\n          \"Sep\",\n          \"Oct\",\n          \"Nov\",\n          \"Dec\",\n        ];\n\n        // Generate categories and series data for the chart\n        const categories = months.map((month) => `${month}`);\n        const seriesData = months.map((month) => {\n          const monthData = filteredData.filter(\n            (item) =>\n              new Date(item.created_at).getMonth() === months.indexOf(month)\n          );\n          return monthData.length;\n        });\n\n        // Configure the chart options\n        const options = {\n          chart: {\n            type: chart,\n          },\n          title: {\n            text: \"Signed-up Users by Month\",\n          },\n          xAxis: {\n            categories: categories,\n          },\n          yAxis: {\n            title: {\n              text: \"User Count\",\n            },\n          },\n          series: [\n            {\n              name: \"Users\",\n              data: seriesData,\n              color: \"#016025\",\n            },\n          ],\n        };\n\n        setChartOptions(options);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, [selectedYear]);\n\n  // Event handler for year selection change\n  const handleYearChange = (event) => {\n    const selectedValue = parseInt(event.target.value);\n    setSelectedYear(selectedValue);\n  };\n\n  // Event handler for chart type selection change\n  const handleChartTypeChange = (event) => {\n    const selectedChartType = event.target.value;\n    setChartOptions((prevOptions) => ({\n      ...prevOptions,\n      chart: {\n        type: selectedChartType,\n      },\n    }));\n    setChart(event.target.value);\n  };\n\n  // Generate chart options for the pie chart\n  const generatePieChartOptions = () => {\n    if (!usersData) return null;\n\n    // Count the number of users in each status category\n    const activeUsers = usersData.filter((user) => user.status === \"active\").length;\n    const inactiveUsers = usersData.filter((user) => user.status === \"inactive\").length;\n    const disabledUsers = usersData.filter((user) => user.status === \"disabled\").length;\n\n    // Configure the chart options\n    const options = {\n      chart: {\n        type: \"pie\",\n      },\n      title: {\n        text: \"User Status\",\n      },\n      series: [\n        {\n          name: \"Status\",\n          data: [\n            { name: \"Active\", y: activeUsers },\n            { name: \"Inactive\", y: inactiveUsers },\n            { name: \"Disabled\", y: disabledUsers },\n          ],\n        },\n      ],\n    };\n\n    return options;\n  };\n\n  return (\n    <div>\n      <h2>Welcome to Dashboard</h2>\n      <br></br>\n      <div className=\"selection\">\n        <label htmlFor=\"year\">Select Year:</label>\n        <select id=\"year\" value={selectedYear} onChange={handleYearChange}>\n          <option value={2021}>2021</option>\n          <option value={2022}>2022</option>\n          <option value={2023}>2023</option>\n        </select>\n      </div>\n      <br></br>\n      <div className=\"selection\">\n        <label htmlFor=\"chartType\">Select Chart Type:</label>\n        <select id=\"chartType\" onChange={handleChartTypeChange}>\n          <option value=\"column\">Column Chart</option>\n          <option value=\"line\">Line Chart</option>\n        </select>\n      </div>\n      <HighchartsReact highcharts={Highcharts} options={chartOptions} />\n      <div>\n        {usersData ? (\n          <HighchartsReact\n            highcharts={Highcharts}\n            options={generatePieChartOptions()}\n          />\n        ) : (\n          <div>Loading...</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}